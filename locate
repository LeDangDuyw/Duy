<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Location Detector</title>
    <style>
        body { font-family: Arial, sans-serif; max-width: 600px; margin: 50px auto; padding: 20px; }
        button { padding: 10px 20px; background: #007bff; color: white; border: none; border-radius: 5px; cursor: pointer; }
        button:hover { background: #0056b3; }
        #location { margin-top: 20px; padding: 10px; background: #f8f9fa; border-radius: 5px; }
        #error { color: red; }
    </style>
</head>
<body>
    <h1>Get Your Approximate Address</h1>
    <p>Click the button below to allow access to your location. This will show your coordinates and estimated address.</p>
    <button id="getLocation">Detect My Location</button>
    <div id="location"></div>
    <div id="error"></div>

    <script>
        document.getElementById('getLocation').addEventListener('click', () => {
            const locationDiv = document.getElementById('location');
            const errorDiv = document.getElementById('error');
            locationDiv.innerHTML = ''; // Clear previous results
            errorDiv.innerHTML = '';

            if (!navigator.geolocation) {
                errorDiv.innerHTML = 'Geolocation is not supported by your browser.';
                return;
            }

            navigator.geolocation.getCurrentPosition(
                async (position) => {
                    const lat = position.coords.latitude;
                    const lon = position.coords.longitude;
                    locationDiv.innerHTML = `<strong>Coordinates:</strong> Latitude ${lat}, Longitude ${lon}<br>Fetching address...`;

                    try {
                        // Reverse geocode using Nominatim (free, no API key needed)
                        const response = await fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lon}&zoom=18&addressdetails=1`);
                        const data = await response.json();
                        
                        if (data && data.display_name) {
                            locationDiv.innerHTML += `<br><strong>Approximate Address:</strong> ${data.display_name}`;
                        } else {
                            locationDiv.innerHTML += '<br><strong>Address:</strong> Could not retrieve address (try a different service).';
                        }
                    } catch (err) {
                        console.error('Geocoding error:', err);
                        locationDiv.innerHTML += '<br><strong>Address:</strong> Error fetching address. Coordinates only.';
                    }
                },
                (error) => {
                    let errorMsg = 'Error getting location: ';
                    switch (error.code) {
                        case error.PERMISSION_DENIED:
                            errorMsg += 'Permission denied by user.';
                            break;
                        case error.POSITION_UNAVAILABLE:
                            errorMsg += 'Location information unavailable.';
                            break;
                        case error.TIMEOUT:
                            errorMsg += 'Request timed out.';
                            break;
                        default:
                            errorMsg += 'Unknown error.';
                    }
                    errorDiv.innerHTML = errorMsg;
                },
                { enableHighAccuracy: true, timeout: 10000, maximumAge: 60000 } // Options for better accuracy
            );
        });
    </script>
</body>
</html>
